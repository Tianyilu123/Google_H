class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int len = nums.length;
        int[] res = new int[len-k+1];
        if(nums == null || nums.length == 0) return new int[0];
        
        Deque<Integer> stack = new ArrayDeque<>();
        
        for(int i=0; i<nums.length; i++) {
            if(i>=k && stack.getFirst() ==i- k) {
                stack.pollFirst();
            }
            
            
            while(!stack.isEmpty() && nums[i] >= nums[stack.getLast()]) {
                stack.pollLast();
            }
            
            stack.offerLast(i);
            if(i-k+1>=0) {
                res[i-k+1] = nums[stack.getFirst()];
            }
        }
        
        return res;
    }
}
